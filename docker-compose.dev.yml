services:
  postgres_primary:
    image: postgres:14
    container_name: postgres_primary
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
      POSTGRES_REPLICATION_USER: replicator
      POSTGRES_REPLICATION_PASSWORD: replicator_password
    volumes:
      - ./primary/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./primary/pg_hba.conf:/etc/postgresql/pg_hba.conf
      - postgres_primary_data:/var/lib/postgresql/data_primary
      - postgres_archive:/var/lib/postgresql/data_primary/archive
    ports:
      - "5432:5432"
    networks:
      - database_network
    command: postgres -c config_file=/etc/postgresql/postgresql.conf

  postgres_standby:
    image: postgres:14
    container_name: postgres_standby
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
      POSTGRES_REPLICATION_USER: replicator
      POSTGRES_REPLICATION_PASSWORD: replicator_password
      PRIMARY_HOST: postgres_primary
    volumes:
      - ./standby/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./standby/pg_hba.conf:/etc/postgresql/pg_hba.conf
      - postgres_standby_data:/var/lib/postgresql/data_standby
    ports:
      - "5433:5432"
    depends_on:
      - postgres_primary
    networks:
      - database_network
    command: >
      bash -c "
        until pg_isready --host=postgres_primary --port=5432; do sleep 1; done;
        pg_basebackup -h postgres_primary -D /var/lib/postgresql/data -U replicator -v -P --wal-method=stream;
        postgres -c config_file=/etc/postgresql/postgresql.conf
      "

  haproxy:
    image: haproxy:latest
    container_name: haproxy
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    ports:
      - "5434:5432"
    depends_on:
      - postgres_primary
      - postgres_standby
    networks:
      - internal_network
      - database_network

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: haproxy
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: keycloak
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KEYCLOAK_IMPORT: /tmp/realm-config.json
    networks:
      - internal_network
    ports:
      - "2000:8080"
    depends_on:
      - haproxy
    volumes:
      - ./keycloak/realm-config.json:/tmp/realm-config.json:ro
    command:
        - "start"
        - "--optimized"
        - --http-enabled=true
        - --http-port=8080
        - "--hostname-strict=false"
        - "-Dquarkus.transaction-manager.enable-recovery=true"
        - "-Djboss.socket.binding.port-offset=1000"
        - "-Dquarkus.http.host=0.0.0.0"
        - "-Dquarkus.http.port=8080"
        - "-Dquarkus.http.host-verification=false"

  frontend:
    build:
      context: ./dirigible
      dockerfile: "Dockerfile.frontend"
    container_name: dirigible_frontend
    networks:
      - internal_network
    ports:
      - "8082:8080"  
    environment:
      - DIRIGIBLE_HOME_URL=/services/web/ide/
      - SERVICE_NAME=frontend-client  # Name of your service as registered in Keycloak

  backend:
    build:
      context: ./dirigible
      dockerfile: "Dockerfile.backend"
    container_name: dirigible_backend
    networks:
      - internal_network
    ports:
      - "8083:8080"  
    environment:
      - DIRIGIBLE_HOME_URL=/services/web/ide/
      - SERVICE_NAME=backend-client  # Name of your service as registered in Keycloak

  fullstack:
    build:
      context: ./dirigible
      dockerfile: "Dockerfile.fullstack"
    container_name: dirigible_fullstack
    networks:
      - internal_network
    ports:
      - "8084:8080" 
    environment:
      - DIRIGIBLE_HOME_URL=/services/web/ide/
      - SERVICE_NAME=fullstack-client  # Name of your service as registered in Keycloak

volumes:
  postgres_primary_data:
  postgres_standby_data:
  postgres_archive:

networks:
  internal_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.22.0.0/16

  database_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.23.0.0/16

